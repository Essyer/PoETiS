import re

CONFIG_PATH = "config.xml"
FILTERS_PATH = "filters.xml"

# TODO: need to check what values we get from API for mods (found them in official trade web filter):
# x to total mana cost of skills (it's about -x mana cost)
# x% increased effect of curses on you (it's about reduced effect)
# x% increased mana reserved (reduced)

# Set of regular expressions for all mods
# More complex expressions before simple ones, for example:
# mods with cold dmg to spells have to be before simple cold dmg and so on
# We are not calculating stats that are coming from other stats, e.g. max life from strength
# Also, the mods listed here are only for character equipment, no jewels (too many additional mods)
_supported_mods = {
    re.compile(r'(\d+) to maximum life'): [],
    re.compile(r'(\d+) to maximum mana'): [],
    re.compile(r'(\d+)% to cold resistance'): ['x% to all elemental resistances', 'x% total resistance',
                                               'x% total to cold resistance'],
    re.compile(r'(\d+)% to fire resistance'): ['x% to all elemental resistances', 'x% total resistance',
                                               'x% total to fire resistance'],
    re.compile(r'(\d+)% to lightning resistance'): ['x% to all elemental resistances',
                                                    'x% total resistance',
                                                    'x% total to lightning resistance'],
    re.compile(r'(\d+)% to chaos resistance'): ['x% total resistance'],
    re.compile(r'(\d+)% to all elemental resistances'): ['x% total to fire resistance', 'x% total to cold resistance',
                                                         'x% total to lightning resistance'],
    re.compile(r'(\d+) to strength'): ['x total to strength'],
    re.compile(r'(\d+)% increased strength'): [],
    re.compile(r'(\d+) to dexterity'): ['x total to dexterity'],
    re.compile(r'(\d+)% increased dexterity'): [],
    re.compile(r'(\d+) to intelligence'): ['x total to intelligence'],
    re.compile(r'(\d+)% increased intelligence'): [],
    re.compile(r'(\d+) to all attributes'): ['x total to dexterity', 'x total to strength', 'x total to intelligence'],
    re.compile(r'(\d+) to maximum energy shield'): [],
    re.compile(r'(\d+)% increased maximum energy shield'): [],
    re.compile(r'(\d+)% increased energy shield'): [],
    re.compile(r'(\d+)% increased rarity of items found'): [],
    re.compile(r'(\d+)% increased quantity of items found'): [],
    re.compile(r'(\d+)% increased stun and block recovery'): [],
    re.compile(r'regenerate (\d+) life per second'): [],
    re.compile(r'regenerate (\d+) mana per second'): [],
    re.compile(r'(\d+)% increased movement speed'): [],
    re.compile(r'adds (\d+) to (\d+) physical damage to attacks'): [],
    re.compile(r'(\d+)% increased physical damage'): [],
    re.compile(r'(\d+)% increased mana regeneration rate'): [],
    re.compile(r'(\d+) to accuracy rating'): [],
    re.compile(r'(\d+) to global critical strike multiplier'): [],
    re.compile(r'(\d+)% increased global critical strike chance'): [],
    re.compile(r'(\d+)% increased critical strike chance'): [],
    re.compile(r'(\d+)% increased spell damage'): ['x% increased fire spell damage', 'x% increased cold spell damage',
                                                   'x% increased lightning spell damage',
                                                   'x% increased chaos spell damage'],
    re.compile(r'(\d+)% increased cast speed'): [],
    re.compile(r'(\d+)% increased attack speed'): [],
    re.compile(r'(\d+)% increased maximum life'): [],
    re.compile(r'(\d+)% increased maximum mana'): [],
    re.compile(r'adds (\d+) to (\d+) fire damage to attacks'): [],
    re.compile(r'adds (\d+) to (\d+) fire damage to spells'): [],
    re.compile(r'adds (\d+) to (\d+) fire damage to spells and attacks'): ['adds x to x fire damage to spells',
                                                                           'adds x to x fire damage to attacks'],
    re.compile(r'adds (\d+) to (\d+) fire damage'): [],
    re.compile(r'adds (\d+) to (\d+) cold damage to attacks'): [],
    re.compile(r'adds (\d+) to (\d+) cold damage to spells'): [],
    re.compile(r'adds (\d+) to (\d+) cold damage to spells and attacks'): ['adds x to x cold damage to spells',
                                                                           'adds x to x cold damage to attacks'],
    re.compile(r'adds (\d+) to (\d+) cold damage'): [],
    re.compile(r'adds (\d+) to (\d+) lightning damage to attacks'): [],
    re.compile(r'adds (\d+) to (\d+) lightning damage to spells'): [],
    re.compile(r'adds (\d+) to (\d+) lightning damage to spells and attacks'): [
        'adds x to x lightning damage to spells',
        'adds x to x lightning damage to attacks'],
    re.compile(r'adds (\d+) to (\d+) lightning damage'): [],
    re.compile(r'adds (\d+) to (\d+) chaos damage to attacks'): [],
    re.compile(r'adds (\d+) to (\d+) chaos damage to spells'): [],
    re.compile(r'adds (\d+) to (\d+) chaos damage'): [],
    re.compile(r'(\d+)% increased fire damage'): ['x% increased fire spell damage'],
    re.compile(r'(\d+)% increased cold damage'): ['x% increased cold spell damage'],
    re.compile(r'(\d+)% increased lightning damage'): ['x% increased lightning spell damage'],
    re.compile(r'(\d+)% increased chaos damage'): ['x% increased chaos spell damage'],
    re.compile(r'(\d+)% increased elemental damage with attack skills'): [],
    re.compile(r'(\d+) to evasion rating'): [],
    re.compile(r'(\d+)% increased evasion rating'): [],
    re.compile(r'(\d+) to armour'): [],
    re.compile(r'(\d+)% increased armour'): [],
    re.compile(r'(\d+)% increased light radius'): [],
    re.compile(r'(\d+) life gained on kill'): [],
    re.compile(r'(\d+) mana gained on kill'): [],
    re.compile(r'(\d+)% of physical attack damage leeched as mana'): [],
    re.compile(r'(\d+)% of physical attack damage leeched as life'): [],
    re.compile(r'(\d+)% increased armour and evasion rating'): ['% increased armour', '% increased evasion rating'],
    re.compile(r'(\d+)% increased armour and energy shield'): ['% increased armour', '% increased energy shield'],
    re.compile(r'(\d+)% increased evasion and energy shield'): ['% increased evasion rating',
                                                                '% increased energy shield'],
    re.compile(r'(\d+)% increased global accuracy rating'): [],
    re.compile(r'reflects (\d+) physical damage to melee attackers'): [],
    re.compile(r'(\d+)% increased stun duration on enemies'): [],
    re.compile(r'(\d+)% increased global physical damage'): [],
    re.compile(r'(\d+)% increased area damage'): [],
    re.compile(r'(\d+)% increased projectile speed'): [],
    re.compile(r'(\d+)% reduced enemy stun threshold'): [],
    re.compile(r'(\d+) life gained for each enemy hit by your attacks'): [],
    re.compile(r'(\d+) mana gained for each enemy hit by your attacks'): [],
    re.compile(r'(\d+) life gained for each enemy hit by your spells'): [],
    re.compile(r'(\d+) mana gained for each enemy hit by your spells'): [],
    re.compile(r'(\d+) life gained for each enemy hit by attacks'): [],
    re.compile(r'(\d+) mana gained for each enemy hit by spells'): [],
    re.compile(r'(\d+)% increased critical strike chance for spells'): [],
    re.compile(r'(\d+)% increased damage'): [],
    re.compile(r'(\d+)% increased burning damage'): [],
    re.compile(r'(\d+)% increased projectile damage'): [],
    re.compile(r'(\d+)% chance to ignite'): [],
    re.compile(r'(\d+)% chance to shock'): [],
    re.compile(r'(\d+)% chance to freeze'): [],
    re.compile(r'(\d+)% increased melee damage'): [],
    re.compile(r'(\d+)% increased attribute requirements'): [],
    re.compile(r'(\d+)% increased damage with poison'): [],
    re.compile(r'(\d+)% increased damage over time'): [],
    re.compile(r'minions deal (\d+)% increased damage'): [],
    re.compile(r'minions have (\d+)% increased maximum life'): [],
    re.compile(r'(\d+)% increased area of effect'): [],
    re.compile(r'(\d+) to level of socketed minion gems'): [],
    re.compile(r'(\d+) to level of socketed melee gems'): [],
    re.compile(r'(\d+) to level of socketed bow gems'): [],
    re.compile(r'(\d+) to level of socketed fire gems'): [],
    re.compile(r'(\d+) to level of socketed cold gems'): [],
    re.compile(r'(\d+) to level of socketed lightning gems'): [],
    re.compile(r'(\d+) to level of socketed chaos gems'): [],
    re.compile(r'(\d+) to level of socketed spell gems'): [],
    re.compile(r'(\d+) to level of socketed curse gems'): [],
    re.compile(r'(\d+) to level of socketed aura gems'): [],
    re.compile(r'(\d+) to level of socketed support gems'): [],
    re.compile(r'(\d+) to level of socketed strength gems'): [],
    re.compile(r'(\d+) to level of socketed dexterity gems'): [],
    re.compile(r'(\d+) to level of socketed intelligence gems'): [],
    re.compile(r'(\d+) to level of socketed trap or mine gems'): [],
    re.compile(r'(\d+) to level of socketed active skill gems'): [],
    re.compile(r'(\d+) to level of socketed gems'): ['x to level of socketed minion gems',
                                                     'x to level of socketed melee gems',
                                                     'x to level of socketed bow gems',
                                                     'x to level of socketed fire gems',
                                                     'x to level of socketed cold gems',
                                                     'x to level of socketed lightning gems',
                                                     'x to level of socketed chaos gems',
                                                     'x to level of socketed spell gems',
                                                     'x to level of socketed curse gems',
                                                     'x to level of socketed aura gems',
                                                     'x to level of socketed support gems',
                                                     'x to level of socketed strength gems',
                                                     'x to level of socketed dexterity gems',
                                                     'x to level of socketed intelligence gems',
                                                     'x to level of socketed trap or mine gems',
                                                     'x to level of socketed active skill gems'],
    re.compile(r'(\d+)% increased poison duration'): [],
    re.compile(r'regenerate (\d+)% of life per second'): [],
    re.compile(r'regenerate (\d+)% of mana per second'): [],
    re.compile(r'(\d+)% increased trap damage'): [],
    re.compile(r'(\d+)% increased mine damage'): [],
    re.compile(r'(\d+)% chance to cause bleeding on hit'): [],
    re.compile(r'attacks (\d+)% chance to cause bleeding'): [],
    re.compile(r'(\d+)% increased damage with bleeding'): [],
    re.compile(r'(\d+)% chance to block attack damage'): [],
    re.compile(r'(\d+)% chance to block spell damage'): [],
    re.compile(r'(\d+)% chance to block'): [],
    re.compile(r'(\d+)% chance to poison on hit'): [],
    re.compile(r'(\d+)% increased elemental damage'): [],
    re.compile(r'(\d+) physical damage taken from attack hits'): [],
    re.compile(r'(\d+)% faster start of energy shield recharge'): [],
    re.compile(r'(\d+) to maximum endurance charges'): [],
    re.compile(r'(\d+) to maximum power charges'): [],
    re.compile(r'(\d+) to maximum frenzy charges'): [],
    re.compile(r'(\d+)% to fire damage over time multiplier'): [],
    re.compile(r'(\d+) to total mana cost of skills'): [],
    re.compile(r'(\d+)% increased effect of curses on you'): [],
    re.compile(r'(\d+)% increased trap throwing speed'): [],
    re.compile(r'(\d+)% increased mine throwing speed'): [],
    re.compile(r'(\d+)% chance to dodge attack hits'): [],
    re.compile(r'(\d+)% chance to dodge spell hits'): [],
    re.compile(r'(\d+)% chance to avoid being frozen'): [],
    re.compile(r'(\d+)% chance to avoid being ignited'): [],
    re.compile(r'(\d+)% chance to avoid being shocked'): [],
    re.compile(r'(\d+)% chance to avoid being stunned'): [],
    re.compile(r'(\d+)% chance to avoid being poisoned'): [],
    re.compile(r'(\d+)% chance to avoid bleeding'): [],
    re.compile(r'(\d+)% of physical damage converted to fire damage'): [],
    re.compile(r'(\d+)% of physical damage converted to cold damage'): [],
    re.compile(r'(\d+)% of physical damage converted to lightning damage'): [],
    re.compile(r'(\d+)% of physical damage converted to chaos damage'): [],
    re.compile(r'(\d+)% chance to blind enemies on hit with attacks'): [],
    re.compile(r'(\d+)% chance to gain phasing for 4 seconds on kill'): [],
    re.compile(r'(\d+)% chance to gain onslaught for 4 seconds on kill'): [],
    re.compile(r'(\d+)% of damage taken gained as mana over 4 seconds when hit'): [],
    re.compile(r'minions have (\d+)% to all elemental resistances'): [],
    re.compile(r'minions have (\d+) to accuracy rating'): [],
    re.compile(r'(\d+)% physical damage over time multiplier'): [],
    re.compile(r'gain (\d+)% of fire damage as extra chaos damage'): [],
    re.compile(r'gain (\d+)% of cold damage as extra chaos damage'): [],
    re.compile(r'gain (\d+)% of lightning damage as extra chaos damage'): [],
    re.compile(r'gain (\d+)% of physical damage as extra chaos damage'): [],
    re.compile(r'gain (\d+)% of physical damage as extra fire damage'): [],
    re.compile(r'gain (\d+)% of physical damage as extra cold damage'): [],
    re.compile(r'gain (\d+)% of physical damage as extra lightning damage'): [],
    re.compile(r'gain (\d+)% of physical damage as extra damage of a random element'): [],
    re.compile(r'(\d+)% increased total recovery per second from life leech'): [],
    re.compile(r'(\d+)% increased total recovery per second from mana leech'): [],
    re.compile(r'you take (\d+)% reduced extra damage from critical strikes'): [],
    re.compile(r'(\d+)% increased mana reserved'): [],
    re.compile(r'(\d+) to maximum number of spectres'): [],
    re.compile(r'(\d+)% to critical strike multiplier if you\'ve killed recently'): [],
    re.compile(r'(\d+) life gained when you block'): [],
    re.compile(r'(\d+) mana gained when you block'): [],
    re.compile(r'minions have(\d+)% increased attack speed'): [],
    re.compile(r'minions have(\d+)% increased cast speed'): [],
    re.compile(r'regenerate (\d+)% of energy shield per second'): [],
    re.compile(r'(\d+)% chance to avoid elemental aliments'): [],
    re.compile(r'(\d+)% increased skill effect duration'): [],
    re.compile(r'damage penetrates (\d+)% fire resistance'): [],
    re.compile(r'damage penetrates (\d+)% cold resistance'): [],
    re.compile(r'damage penetrates (\d+)% lightning resistance'): [],
    re.compile(r'damage penetrates (\d+)% elemental resistances'): ['damage penetrates x% fire resistance',
                                                                    'damage penetrates x% cold resistance'
                                                                    'damage penetrates x% lightning resistance'],

}

unsupported_mods = {
    re.compile(r'socketed gems are supported by.*')
}


def get_mod_text_from_regex(mod_value):
    return mod_value.pattern.replace('(\\d+)', 'x').replace('.*', '').replace('(\\d+\\.?\\d*)', 'x')


def get_mod_text_template(mod_text):
    return re.sub(r'(\d+\.?\d*)', 'x', mod_text)


# Lazy way to create dictionary. We need it to not replace text each time we want to find mod regex in set above.
# Having full mod text as key allows us to find it when iterating over item mods
supported_mods = {
    get_mod_text_from_regex(mod).replace("\\", ""): [mod, _supported_mods.get(mod)]
    for mod in _supported_mods
}

# List of all item types from https://pathofexile.gamepedia.com/Public_stash_tab_API
# and item bases from https://pathofexile.gamepedia.com/Equipment
# Not in lower case to use in UI
item_bases = {
    'accessory': {
        'amulet': ['Coral Amulet', 'Paula Amulet', 'Amber Amulet', 'Jade Amulet', 'Lapis Amulet', 'Gold Amulet',
                   'Agate Amulet', 'Citrine Amulet', 'Turquoise Amulet', 'Onyx Amulet', 'Marble Amulet',
                   'Blue Pearl Amulet',
                   'Ashscale Talisman', 'Avian Twins Talisman', 'Black Maw Talisman', 'Bonespire Talisman',
                   'Breakrib Talisman', 'Chrysalis Talisman', 'Clutching Talisman', 'Deadhand Talisman',
                   'Deep One Talisman', 'Fangjaw Talisman', 'Greatwolf Talisman', 'Hexclaw Talisman', 'Horned Talisman',
                   'Lone Antler Talisman', 'Longtooth Talisman', 'Mandible Talisman', 'Monkey Paw Talisman',
                   'Monkey Twins Talisman', 'Primal Skull Talisman', 'Rot Head Talisman', 'Rotfeather Talisman',
                   'Spinefuse Talisman', 'Splitnewt Talisman', 'Three Hands Talisman', 'Three Rat Talisman',
                   'Undying Flesh Talisman', 'Wereclaw Talisman', 'Writhing Talisman'],
        'belt': ['Chain Belt', 'Rustic Sash', 'Stygian Vise', 'Heavy Belt', 'Leather Belt', 'Cloth Belt',
                 'Studded Belt', 'Vanguard Belt', 'Crystal Belt'],
        'ring': ['Breach Ring', 'Coral Ring', 'Iron Ring', 'Paula Ring', 'Unset Ring', 'Sapphire Ring', 'Topaz Ring',
                 'Ruby Ring', 'Diamond Ring', 'Gold Ring', 'Moonstone Ring', 'Two-Stone Ring', 'Amethyst Ring',
                 'Prismatic Ring', 'Cerulean Ring', 'Opal Ring', 'Steel Ring', 'Vermillion Ring']
    },
    'armour': {
        'boots': ['Iron Greaves', 'Steel Greaves', 'Plated Greaves', 'Reinforced Greaves', 'Antique Greaves',
                  'Ancient Greaves', 'Goliath Greaves', 'Vaal Greaves', 'Titan Greaves',
                  'Rawhide Boots', 'Goathide Boots', 'Deerskin Boots', 'Nubuck Boots', 'Eelskin Boots',
                  'Sharkskin Boots', 'Shagreen Boots', 'Stealth Boots', 'Slink Boots',
                  'Wool Shoes', 'Velvet Slippers', 'Silk Slippers', 'Scholar Boots', 'Satin Slippers',
                  'Samite Slippers', 'Conjured Boots', 'Arcanist Slippers', 'Sorcerer Boots',
                  'Leatherscale Boots', 'Ironscale Boots', 'Bronzescale Boots', 'Steelscale Boots',
                  'Serpentscale Boots', 'Wyrmscale Boots', 'Hydrascale Boots', 'Dragonscale Boots', 'Teo-Toned Boots',
                  'Chain Boots', 'Ringmail Boots', 'Mesh Boots', 'Riveted Boots', 'Zealot Boots', 'Soldier Boots',
                  'Legion Boots', 'Crusader Boots',
                  'Wrapped Boots', 'Strapped Boots', 'Clasped Boots', 'Shackled Boots', 'Trapper Boots', 'Ambush Boots',
                  'Carnal Boots', 'Assassin\'s Boots', 'Murder Boots'],
        'chest': ['Plate Vest', 'Chestplate', 'Copper Plate', 'War Plate', 'Full Plate', 'Arena Plate', 'Lordly Plate',
                  'Bronze Plate', 'Battle Plate', 'Sun Plate', 'Colosseum Plate', 'Majestic Plate', 'Golden Plate',
                  'Crusader Plate', 'Astral Plate', 'Gladiator Plate', 'Glorious Plate',
                  'Shabby Jerkin', 'Strapped Leather', 'Buckskin Tunic', 'Wild Leather', 'Full Leather', 'Sun Leather',
                  'Thief\'s Garb', 'Eelskin Tunic', 'Frontier Leather', 'Glorious Leather', 'Coronal Leather'
                                                                                            'Cutthroat\'s Garb',
                  'Sharkskin Tunic', 'Destiny Leather', 'Exquisite Leather', 'Zodiac Leather',
                  'Assassin\'s Garb',
                  'Simple Robe', 'Silken Vest', 'Scholar\'s Robe', 'Silken Garb', 'Mage\'s Vestment', 'Silk Robe',
                  'Cabalist Regalia', 'Sage\'s Robe', 'Silken Wrap', 'Conjurer\'s Vestment', 'Spidersilk Robe',
                  'Destroyer Regalia', 'Savant\'s Robe', 'Necromancer Silks', 'Occultist\'s Vestment', 'Widowsilk Robe',
                  'Vaal Regalia',
                  'Scale Vest', 'Light Brigandine', 'Scale Doublet', 'Infantry Brigandine', 'Full Scale Armour',
                  'Soldier\'s Brigandine', 'Field Lamellar', 'Wyrmscale Doublet', 'Hussar Brigandine', 'Full Wyrmscale',
                  'Commander\'s Brigandine', 'Battle Lamellar', 'Dragonscale Doublet', 'Desert Brigandine',
                  'Full Dragonscale', 'General\'s Brigandine', 'Triumphant Lamellar',
                  'Chainmail Vest', 'Chainmail Tunic', 'Ringmail Coat', 'Chainmail Doublet', 'Full Ringmail',
                  'Full Chainmail', 'Holy Chainmail', 'Latticed Ringmail', 'Crusader Chainmail', 'Ornate Ringmail',
                  'Chain Hauberk', 'Devout Chainmail', 'Loricated Ringmail', 'Conquest Chainmail', 'Elegant Ringmail',
                  'Saint\'s Hauberk', 'Saintly Chainmail',
                  'Padded Vest', 'Oiled Vest', 'Padded Jacket', 'Oiled Coat', 'Scarlet Raiment', 'Waxed Garb',
                  'Bone Armour', 'Quilted Jacket', 'Sleek Coat', 'Crimson Raiment', 'Lacquered Garb', 'Crypt Armour',
                  'Sentinel Jacket', 'Varnished Coat', 'Blood Rainment', 'Sadist Garb', 'Carnal Armour',
                  'Sacrificial Garb'],
        'gloves': ['Iron Gauntlets', 'Plated Gauntlets', 'Bronze Gauntlets', 'Steel Gauntlets', 'Antique Gauntlets',
                   'Ancient Gauntlets', 'Goliath Gauntlets', 'Vaal Gauntlets', 'Titan Gauntlets', 'Spiked Gloves',
                   'Rawhide Gloves', 'Goathide Gloves', 'Deerskin Gloves', 'Nubuck Gloves', 'Eelskin Gloves',
                   'Sharkskin Gloves', 'Shagreen Gloves', 'Stealth Gloves', 'Gripped Gloves', 'Slink Gloves',
                   'Wool Gloves', 'Velvet Gloves', 'Silk Gloves', 'Embroidered Gloves', 'Satin Gloves', 'Samite Gloves',
                   'Conjured Gloves', 'Arcanist Gloves', 'Sorcerer Gloves', 'Fingerless Silk Gloves',
                   'Fishscale Gauntlets', 'Ironscale Gauntlets', 'Bronzescale Gauntlets', 'Steelscale Gauntlets',
                   'Serpentscale Gauntlets', 'Wyrmscale Gauntlets', 'Hydrascale Gauntlets', 'Dragonscale Gauntlets',
                   'Chain Gloves', 'Ringmail Gloves', 'Mesh Gloves', 'Rivetet Gloves', 'Zealot Gloves',
                   'Soldier Gloves', 'Legion Gloves', 'Crusader Gloves',
                   'Wrapped Mitts', 'Strapped Mitts', 'Clasped Mitts', 'Trapper Mitts', 'Ambush Mitts', 'Carnal Mitts',
                   'Assassin\'s Mitts', 'Murder Mitts'],
        'helmet': ['Iron Hat', 'Cone Helmet', 'Barbute Helmet', 'Close Helmet', 'Gladiator Helmet', 'Reaver Helmet',
                   'Siege Helmet', 'Samite Helmet', 'Ezomyte Burgonet', 'Royal Burgonet', 'Eternal Burgonet',
                   'Leather Cap', 'Tricorne', 'Leather Hood', 'Wolf Pelt', 'Hunter Hood', 'Noble Tricorne',
                   'Ursine Pelt', 'Silken Hood', 'Sinner Tricorne', 'Lion Pelt',
                   'Vine Circlet', 'Iron Circlet', 'Torture Cage', 'Tribal Circlet', 'Bone Circlet', 'Lunaris Circlet',
                   'Steel Circlet', 'Necromancer Circlet', 'Mind Cage', 'Hubris Circlet',
                   'Battered Helm', 'Sallet', 'Visored Sallet', 'Gilded Sallet', 'Secutor Helm', 'Fencer Helm',
                   'Lacquered Helm', 'Fluted Bascinet', 'Pig-Faced Bascinet', 'Nightmare Bascinet',
                   'Rusted Coif', 'Soldier Helmet', 'Great Helmet', 'Crusader Helmet', 'Aventail Helmet',
                   'Zealot Helmet', 'Great Crown', 'Magistrate Crown', 'Prophet Crown', 'Praetor Crown', 'Bone Helmet',
                   'Scare Mask', 'Plague Mask', 'Iron Mask', 'Festival Mask', 'Golden Mask', 'Raven Mask',
                   'Callous Mask', 'Regicide Mask', 'Harlequin Mask', 'Vaal Mask', 'Deicide Mask'],
        'shield': ['Splintered Tower Shield', 'Corroded Tower Shield', 'Rawhide Tower Shield', 'Cedar Tower Shield',
                   'Copper Tower Shield', 'Reinforced Tower Shield', 'Painted Tower Shield', 'Buckskin Tower Shield',
                   'Mahogany Tower Shield', 'Bronze Tower Shield', 'Girded Tower Shield', 'Crested Tower Shield',
                   'Shagreen Tower Shield', 'Ebony Tower Shield', 'Ezomyte Tower Shield', 'Colossal Tower Shield',
                   'Pinnacle Tower Shield',
                   'Goathide Buckler', 'Pine Buckler', 'Painted Buckler', 'Hammered Buckler', 'War Buckler',
                   'Gilded Buckler', 'Oak Buckler', 'Enameled Buckler', 'Corrugated Buckler', 'Battle Buckler',
                   'Golden Buckler', 'Ironwood Buckler', 'Lacquered Buckler', 'Vaal Buckler', 'Crusader Buckler',
                   'Imperial Buckler',
                   'Twig Spirit Shield', 'Yew Spirit Shield', 'Bone Spirit Shield', 'Tarnished Spirit Shield',
                   'Jingling Spirit Shield', 'Brass Spirit Shield', 'Walnut Spirit Shield', 'Ivory Spirit Shield',
                   'Ancient Spirit Shield', 'Chiming Spirit Shield', 'Thorium Spirit Shield', 'Lacewood Spirit Shield',
                   'Fossilised Spirit Shield', 'Vaal Spirit Shield', 'Harmonic Spirit Shield', 'Titanium Spirit Shield',
                   'Rotted Round Shield', 'Fir Round Shield', 'Studded Round Shield', 'Scarlet Round Shield',
                   'Splendid Round Shield', 'Maple Round Shield', 'Spiked Round Shield', 'Crimson Round Shield',
                   'Baroque Round Shield', 'Teak Round Shield', 'Spiny Round Shield', 'Cardinal Round Shield',
                   'Elegant Round Shield',
                   'Plank Kite Shield', 'Linden Kite Shield', 'Reinforced Kite Shield', 'Layered Kite Shield',
                   'Ceremonial Kite Shield', 'Etched Kite Shield', 'Steel Kite Shield', 'Laminated Kite Shield',
                   'Angelic Kite Shield', 'Branded Kite Shield', 'Champion Kite Shield', 'Mosaic Kite Shield',
                   'Archon Kite Shield',
                   'Spiked Bundle', 'Driftwood Spiked Shield', 'Alloyed Spiked Shield', 'Burnished Spiked Shield',
                   'Ornate Spiked Shield', 'Redwood Spiked Shield', 'Compound Spiked Shield', 'Polished Spiked Shield',
                   'Sovereign Spiked Shield', 'Alder Spiked Shield', 'Ezomyte Spiked Shield', 'Mirrored Spiked Shield',
                   'Supreme Spiked Shield'],
        'quiver': ['Two-Point Arrow Quiver', 'Serrated Arrow Quiver', 'Sharktooth Arrow Quiver', 'Blunt Arrow Quiver',
                   'Fire Arrow Quiver', 'Broadhead Arrow Quiver', 'Penetrating Arrow Quiver', 'Ornate Quiver',
                   'Spike-Point Arrow Quiver'],

    },
    'weapon': {
        'bow': ['Crude Bow', 'Short Bow', 'Long Bow', 'Composite Bow', 'Recurve Bow', 'Bone Bow', 'Royal Bow',
                'Death Bow', 'Grove Bow', 'Reflex Bow', 'Decurve Bow', 'Compound Bow', 'Sniper Bow', 'Ivory Bow',
                'Highborn Bow', 'Decimation Bow', 'Thicket Bow', 'Steelwood Bow', 'Citadel Bow', 'Ranger Bow',
                'Assassin Bow', 'Spine Bow', 'Imperial Bow', 'Harbinger Bow', 'Maraketh Bow'],
        'claw': ['Nailed Fist', 'Sharktooth Claw', 'Awl', 'Cat\'s Paw', 'Blinder', 'Timeworn Claw', 'Sparkling Claw',
                 'Fright Claw', 'Double Claw', 'Thresher Claw', 'Gouger', 'Tiger\'s Paw', 'Gut Ripper',
                 'Prehistoric Claw', 'Noble Claw', 'Eagle Claw', 'Twin Claw', 'Great White Claw', 'Throat Stabber',
                 'Hellion\'s Paw', 'Eye Gouger', 'Vaal Claw', 'Imperial Claw', 'Terror Claw', 'Gemini Claw'],
        'dagger': ['Glass Shank', 'Skinning Knife', 'Stiletto', 'Flaying Knife', 'Prong Dagger', 'Poignard', 'Trisula',
                   'Gutting Knife', 'Ambusher', 'Sai', 'Carving Knife', 'Boot Knife', 'Copper Kris', 'Skean',
                   'Imp Dagger', 'Butcher Knife', 'Boot Blade', 'Royal Skean', 'Fiend Dagger', 'Slaughter Knife',
                   'Ezomyte Dagger', 'Platinum Kris', 'Imperial Skean', 'Demon Dagger'],

        'sceptre': ['Driftwood Sceptre', 'Darkwood Sceptre', 'Bronze Sceptre', 'Quartz Sceptre', 'Iron Sceptre',
                    'Ochre Sceptre', 'Ritual Sceptre', 'Shadow Sceptre', 'Grinning Sceptre', 'Horned Sceptre',
                    'Sekhem', 'Crystal Sceptre', 'Lead Sceptre', 'Blood Sceptre', 'Royal Sceptre', 'Abyssal Sceptre',
                    'Stag Sceptre', 'Karui Sceptre', 'Tyrant\'s Sceptre', 'Opal Sceptre', 'Platinum Sceptre',
                    'Vaal Sceptre', 'Carnal Sceptre', 'Void Sceptre', 'Sambar Sceptre'],
        'staff': ['Gnarled Branch', 'Primitive Staff', 'Long Staff', 'Royal Staff', 'Crescent Staff', 'Woodful Staff',
                  'Quarterstaff', 'Highborn Staff', 'Moon Staff', 'Primordial Staff', 'Lathi', 'Imperial Staff',
                  'Eclipse Staff', 'Iron Staff', 'Coiled Staff', 'Vile Staff', 'Military Staff', 'Serpentine Staff',
                  'Foul Staff', 'Ezomyte Staff', 'Maelström Staff', 'Judgement Staff'],
        'wand': ['Driftwood Wand', 'Goat\'s Horn', 'Carved Wand', 'Quartz Wand', 'Spiraled Wand', 'Sage Wand',
                 'Pagan Wand', 'Faun\'s Horn', 'Engraved Wand', 'Crystal Wand', 'Serpent Wand', 'Omen Wand',
                 'Heathen Wand', 'Demon\'s Horn', 'Imbued Wand', 'Opal Wand', 'Tornado Wand', 'Prophecy Wand',
                 'Profane Wand', 'Convoking Wand'],
        'oneaxe': ['Rusted Hatchet', 'Jade Hatchet', 'Boarding Axe', 'Cleaver', 'Broad Axe', 'Arming Axe',
                   'Decorative Axe', 'Spectral Axe', 'Etched Hatchet', 'Jasper Axe', 'Tomahawk', 'Wrist Chopper',
                   'War Axe', 'Chest Splitter', 'Ceremonial Axe', 'Wraith Axe', 'Engraved Hatchet', 'Karui Axe',
                   'Siege Axe', 'Reaver Axe', 'Butcher Axe', 'Vaal Hatchet', 'Royal Axe', 'Infernal Axe',
                   'Runic Hatchet'],
        'twoaxe': ['Stone Axe', 'Jade Chopper', 'Woodsplitter', 'Poleaxe', 'Double Axe', 'Gilded Axe', 'Shadow Axe',
                   'Dagger Axe', 'Jasper Chopper', 'Timber Axe', 'Headsman Axe', 'Labrys', 'Noble Axe', 'Abyssal Axe',
                   'Karui Chopper', 'Talon Axe', 'Sundering Axe', 'Ezomyte Axe', 'Vaal Axe', 'Despot Axe', 'Void Axe',
                   'Fleshripper'],
        'onemace': ['Driftwood Club', 'Tribal Club', 'Spiked Club', 'Stone Hammer', 'War Hammer', 'Bladed Mace',
                    'Ceremonial Mace', 'Dream Mace', 'Wyrm Mace', 'Petrified Club', 'Barbed Club', 'Rock Breaker',
                    'Battle Hammer', 'Flanged Mace', 'Ornate Mace', 'Phantom Mace', 'Dragon Mace', 'Ancestral Club',
                    'Tenderizer', 'Gavel', 'Legion Hammer', 'Pernarch', 'Auric Mace', 'Nightmare Mace',
                    'Behemoth Mace'],
        'twomace': ['Driftwood Maul', 'Tribal Maul', 'Mallet', 'Sledgehammer', 'Jagged Maul', 'Brass Maul',
                    'Fright Maul', 'Morning Star', 'Totemic Maul', 'Great Mallet', 'Steelhead', 'Spiny Maul',
                    'Plated Maul', 'Dread Maul', 'Solar Maul', 'Karui Maul', 'Colossus Mallet', 'Piledriver',
                    'Meatgrinder', 'Imperial Maul', 'Terror Maul', 'Coronal Maul'],
        'onesword': ['Rusted Sword', 'Copper Sword', 'Sabre', 'Broad Sword', 'War Sword', 'Ancient Sword',
                     'Elegant Sword', 'Dusk Blade', 'Hook Sword', 'Variscite Blade', 'Cutlass', 'Baselard',
                     'Battle Sword', 'Elder Sword', 'Graceful Sword', 'Twilight Blade', 'Grappler', 'Gemstone Sword',
                     'Corsair Sword', 'Gladius', 'Legion Sword', 'Vaal Blade', 'Eternal Sword', 'Midnight Blade',
                     'Tiger Hook', 'Rusted Spike', 'Whalebone Rapier', 'Battered Foil', 'Basket Rapier', 'Jagged Foil',
                     'Antique Rapier', 'Elegant Foil', 'Thorn Rapier', 'Smallsword', 'Wyrmbone Rapier',
                     'Burnished Foil', 'Estoc', 'Serrated Foil', 'Primeval Rapier', 'Fancy Foil', 'Apex Rapier',
                     'Courtesan Sword', 'Dragonbone Rapier', 'Tempered Foil', 'Pecoraro', 'Spiraled Foil',
                     'Vaal Rapier', 'Jewelled Foil', 'Harpy Rapier', 'Dragoon Sword'],

        'twosword': ['Corroded Blade', 'Longsword', 'Bastard Sword', 'Two-Handed Sword', 'Etched Greatsword',
                     'Ornate Sword', 'Spectral Sword', 'Curved Blade', 'Butcher Sword', 'Footman Sword',
                     'Highland Blade', 'Engraved Greatsword', 'Tiger Sword', 'Wraith Sword', 'Lithe Blade',
                     'Headman\'s Sword', 'Reaver Sword', 'Ezomyte Blade', 'Vaal Greatsword', 'Lion Sword',
                     'Infernal Sword', 'Exquisite Blade'],
    }
}
